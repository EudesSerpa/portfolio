---
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import { Lang, languages } from "@i18n/ui";
import Flags from "@icons/Flags.astro";
import Icon from "@components/Icon.astro";
import Button from "@components/buttons/Button.astro";

const currentLangTag = getLangFromUrl(Astro.url);
const currentLangLabel = languages[currentLangTag];

const availableLangs = Object.entries(languages).filter(
	([langTag, _label]) => langTag !== currentLangTag
);

const t = useTranslations(currentLangTag);
---

<div class="lang">
	<span class="visually-hidden">{t("lang.picker")}</span>

	<Button
		class="lang__switcher js-lang__switcher"
		type="solid"
		shape="pill"
		i11nAttrs={{ "aria-label": t("i11n.menu.no.expanded.label") }}
	>
		<Flags flagTag={currentLangTag} />
		<span><abbr title={currentLangLabel}>{currentLangTag}</abbr></span>
		<span class="lang__arrow"><Icon icon="arrow" /></span>
	</Button>

	<ul id="js-lang-list" class="lang__list" data-lang={currentLangTag}>
		{
			availableLangs.map(([langTag, label]) => (
				<li>
					<Button
						class="lang__option"
						href={`/${langTag}/`}
						type="solid"
						shape="pill"
					>
						<Flags flagTag={langTag as Lang} />
						<abbr title={label}>{langTag}</abbr>
					</Button>
				</li>
			))
		}
	</ul>
</div>

<script>
	import { toggleMenu } from "@utils/toggleMenu";

	const langList = document.getElementById("js-lang-list") as HTMLUListElement;
	const switcherLang = document.querySelector(
		".js-lang__switcher"
	) as HTMLButtonElement;

	toggleMenu(langList, switcherLang);
</script>

<style>
	abbr {
		text-decoration: none;
	}

	.lang {
		position: relative;
		font-size: var(--font-size-large);
		font-weight: var(--font-weight-bold);
	}

	.lang__switcher,
	.lang__option {
		padding: var(--space-stack-4x) var(--space-stack-12x);
		text-transform: uppercase;
	}

	.lang__list {
		--separation: calc(100% + var(--space-stack-10x));

		position: absolute;
		display: grid;
		gap: var(--space-stack-4x);
		inset-block-start: var(--separation);
		visibility: var(--lang-list-visibility, hidden);
		opacity: var(--lang-list-opacity, 0);
		translate: var(--lang-list-translate, 0 calc(var(--separation) * -1));
		transition: opacity .3s var(--theme-transition);
	}

	.lang__arrow {
		transition: rotate .3s var(--theme-transition);
	}

	.lang__switcher:is([aria-expanded="true"]) .lang__arrow {
		rotate: 0.5turn;
	}

	.lang__switcher:is([aria-expanded="true"]) + .lang__list {
		--lang-list-visibility: visible;
		--lang-list-opacity: 1;
		--lang-list-translate: 0;
	}

	@media (prefers-reduced-motion: no-preference) {
		.lang__list {
			transition: opacity var(--theme-transition),
				translate var(--appears-transition);
			transition-duration: .3s;
		}
	}
</style>
